{"version":3,"file":"binaryarray.js","sources":["../src/common.js","../src/indexes/binaryarray.js"],"sourcesContent":["export function oneOrMany(items) {\r\n    if (!items) {\r\n        return [];\r\n    } else if (items instanceof Map) {\r\n        return Array.from(items.values());\r\n    } else if (!Array.isArray(items)) {\r\n        return [items];\r\n    } else {\r\n        return items;\r\n    }\r\n}\r\n\r\nexport function lt(comparer, a, b) {\r\n    return comparer(a, b) === -1;\r\n}\r\n\r\nexport function gt(comparer, a, b) {\r\n    return comparer(a, b) === 1;\r\n}\r\n\r\nexport function eq(comparer, a, b) {\r\n    return comparer(a, b) === 0;\r\n}\r\n\r\nexport function defaultComparer(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n\r\nexport function intersect(arrays) {\r\n    const ordered = (arrays.length===1\r\n        ? arrays : \r\n        arrays.sort((a1,a2) => a1.length - a2.length));\r\n    const shortest = ordered[0],\r\n        set = new Set(), \r\n        result = [];\r\n\r\n    for (let i=0; i < shortest.length; i++) {\r\n        const item = shortest[i];\r\n        let every = true; // don't use ordered.every ... it is slow\r\n        for(let j=1;j<ordered.length;j++) {\r\n            if(ordered[j].includes(item)) continue;\r\n            every = false;\r\n            break;\r\n        }\r\n        // ignore if not in every other array, or if already captured\r\n        if(!every || set.has(item)) continue;\r\n        // otherwise, add to bookeeping set and the result\r\n        set.add(item);\r\n        result[result.length] = item;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function extract(map, keys) {\r\n    const r = [];\r\n    keys.forEach((key) => {\r\n        if (map.has(key)) {\r\n            r.push(map.get(key));\r\n        }\r\n    });    \r\n    return r;\r\n}","import * as mem from '../common';\r\n\r\nclass BinaryArray {\r\n    constructor (items, comparer) {\r\n        this.arr = [];\r\n        this.add(items);\r\n        this.comparer = comparer || mem.defaultComparer;\r\n    }\r\n    \r\n    clear() {\r\n        this.arr = [];\r\n    }\r\n\r\n    get items() {\r\n        return this.arr;\r\n    }\r\n\r\n    indexOf(item) {\r\n        let i = this.insertPos(item);\r\n        if (this.arr[i] && mem.eq(this.comparer, this.arr[i], item)) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    insertPos(item) {\r\n        let low = 0, high = this.arr.length, mid;\r\n        while (low < high) {\r\n            // faster version of Math.floor((low + high) / 2)\r\n            mid = (low + high) >>> 1; \r\n            mem.lt(this.comparer, this.arr[mid], item) ? low = mid + 1 : high = mid\r\n        }\r\n        return low;\r\n    }\r\n\r\n    get(items) {\r\n        items = mem.oneOrMany(items);\r\n        if (items.length === 1) {\r\n            return this.getOne(items[0]);\r\n        }\r\n        let data = items.map(m => this.getOne(m));\r\n        return [].concat.apply([], data);\r\n    }\r\n\r\n    getOne(item) {\r\n        const i = this.indexOf(item);\r\n        if (i !== undefined) {\r\n            return this.arr[i];\r\n        }\r\n    }\r\n\r\n    remove(items) {\r\n        items = mem.oneOrMany(items);\r\n        items.forEach(item => {\r\n            this.removeOne(item);\r\n        });\r\n    }\r\n\r\n    removeOne(item) {\r\n        const i = this.indexOf(item);\r\n        if (i !== undefined) {\r\n            this.arr.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    add(items) {\r\n        items = mem.oneOrMany(items);\r\n        items.forEach(item => {\r\n            this.addOne(item);\r\n        });\r\n    }\r\n\r\n    addOne(item) {\r\n        const ix = this.insertPos(item);\r\n        this.arr.splice(ix, 0, item);\r\n    }\r\n\r\n    update(item) {\r\n        this.indexOf(item);\r\n        if (i !== undefined) {\r\n            this.arr[i] = item;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BinaryArray;"],"names":["mem.defaultComparer","mem.eq","let","mem.lt","mem.oneOrMany","this"],"mappings":"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"}