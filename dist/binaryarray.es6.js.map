{"version":3,"file":"binaryarray.es6.js","sources":["../src/common.js","../src/indexes/binaryarray.js"],"sourcesContent":["export function oneOrMany(items) {\r\n    if (!items) {\r\n        return [];\r\n    } else if (items instanceof Map) {\r\n        return Array.from(items.values());\r\n    } else if (!Array.isArray(items)) {\r\n        return [items];\r\n    } else {\r\n        return items;\r\n    }\r\n}\r\n\r\nexport function lt(comparer, a, b) {\r\n    return comparer(a, b) === -1;\r\n}\r\n\r\nexport function gt(comparer, a, b) {\r\n    return comparer(a, b) === 1;\r\n}\r\n\r\nexport function eq(comparer, a, b) {\r\n    return comparer(a, b) === 0;\r\n}\r\n\r\nexport function defaultComparer(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n\r\nexport function intersect(arrays) {\r\n    const ordered = (arrays.length===1\r\n        ? arrays : \r\n        arrays.sort((a1,a2) => a1.length - a2.length));\r\n    const shortest = ordered[0],\r\n        set = new Set(), \r\n        result = [];\r\n\r\n    for (let i=0; i < shortest.length; i++) {\r\n        const item = shortest[i];\r\n        let every = true; // don't use ordered.every ... it is slow\r\n        for(let j=1;j<ordered.length;j++) {\r\n            if(ordered[j].includes(item)) continue;\r\n            every = false;\r\n            break;\r\n        }\r\n        // ignore if not in every other array, or if already captured\r\n        if(!every || set.has(item)) continue;\r\n        // otherwise, add to bookeeping set and the result\r\n        set.add(item);\r\n        result[result.length] = item;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function extract(map, keys) {\r\n    const r = [];\r\n    keys.forEach((key) => {\r\n        if (map.has(key)) {\r\n            r.push(map.get(key));\r\n        }\r\n    });    \r\n    return r;\r\n}","import * as mem from '../common';\r\n\r\nclass BinaryArray {\r\n    constructor (comparer) {\r\n        this.arr = [];\r\n        this.comparer = comparer || mem.defaultComparer;\r\n    }\r\n    \r\n    clear() {\r\n        this.arr = [];\r\n    }\r\n\r\n    get keys() {\r\n        return this.arr.map(m => m.key);\r\n    }\r\n\r\n    indexOf(key) {\r\n        let i = this.insertPos(key);\r\n        if (this.arr[i] && mem.eq(this.comparer, this.arr[i].key, key)) {\r\n            return i;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    insertPos(key) {\r\n        let low = 0, high = this.arr.length, mid;\r\n        while (low < high) {\r\n            // faster version of Math.floor((low + high) / 2)\r\n            mid = (low + high) >>> 1; \r\n            mem.lt(this.comparer, this.arr[mid].key, key) ? low = mid + 1 : high = mid\r\n        }\r\n        return low;\r\n    }\r\n\r\n    get(key) {\r\n        const i = this.indexOf(key);\r\n        if (i > -1) {\r\n            return this.arr[i].value;\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        const i = this.indexOf(key);\r\n        if (i > -1) {\r\n            this.removeAt(i);\r\n        }\r\n    }\r\n\r\n    add(key, value) {\r\n        const ix = this.insertPos(key);\r\n        let item = { key: key, value: value };\r\n        this.addAt(ix, key, value);\r\n    }\r\n\r\n    addAt(pos, key, value) {\r\n        let item = { key: key, value: value };\r\n        this.arr.splice(pos, 0, item);\r\n    }\r\n\r\n    removeAt(pos) {\r\n        this.arr.splice(pos, 1);\r\n    }\r\n\r\n    getAt(pos) {\r\n        return this.arr[pos];\r\n    }\r\n\r\n    update(item) {\r\n        this.indexOf(item.key);\r\n        if (i !== undefined) {\r\n            this.arr[i].value = item;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BinaryArray;"],"names":["mem.defaultComparer","mem.eq","mem.lt"],"mappings":"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"}